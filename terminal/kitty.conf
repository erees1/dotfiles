# vim:fileencoding=utf-8:foldmethod=marker

font_family JetBrainsMono NF
font_size 13.0
scrollback_lines 100

window_margin_width 5
adjust_line_height 5

confirm_os_window_close 0

# background_opacity 0.95
# background_blur 90

macos_titlebar_color dark
macos_option_as_alt yes

window_border_width 0.1
draw_minimal_borders yes
window_margin_width 0
window_padding_width 5

# Tab bar configuration
tab_bar_edge bottom
tab_bar_style powerline
tab_bar_min_tabs 1
tab_powerline_style slanted
tab_bar_align left
tab_bar_margin_width 0.0
tab_bar_margin_height 0.0 0.0
tab_bar_background none

# Tab bar colors matching theme
active_tab_foreground   #000000
active_tab_background   #e0e0e0
active_tab_font_style   bold
inactive_tab_foreground #d0d0d0
inactive_tab_background #505050
inactive_tab_font_style normal
# tab_bar_background      #404040
# tab_bar_margin_color    #404040
tab_bar_min_tabs 1

# Terminal settings
term xterm-256color
scrollback_lines 40000

# Customize tab titles - show only last part of path
tab_title_template " {index}: {title.split('/')[-1] if '/' in title else title} "

# open urls with cmd
open_url_modifiers: cmd

# Mouse support
mouse_hide_wait 0
copy_on_select clipboard
map cmd+button1 open_url

map cmd+g kitten hints --customize-processing file_opener_hint.py
map cmd+u kitten hints --type=url --linenum-action=self --program default

map cmd+o goto_tab -1

# Theme
background            #1F2127
foreground            #CED1D4
cursor                #ffffff
selection_background #f1fa8c
color0                #000000
color8                #545454
color1                #fa5355
color9                #fb7172
color2                #94A76e
color10               #67ff4f
color3                #F6c879
color11               #ffff00
color4                #5a8fef
color12               #6ba0ff
color5                #ec7df8
color13               #f0a0f9
color6                #33c2c1
color14               #60d3d1
color7                #adadad
color15               #eeeeee
# selection_foreground  #1F2124
active_border_color   #808080
inactive_border_color #808080
inactive_text_alpha 0.4

# Vim-style keybindings and window navigation
enabled_layouts splits,stack,horizontal,vertical

# Window creation/splitting (similar to Tmux's split commands)
map ctrl+a>s launch --location=hsplit --cwd=current
map ctrl+a>shift+S combine : launch --location=hsplit --cwd=current : move_window up
map ctrl+a>v launch --location=vsplit --cwd=current
map ctrl+a>shift+V launch --location=vsplit --cwd=current --location=before

# map ctrl+a>h launch --location=vsplit --location=before --cwd=current
# map ctrl+a>l launch --location=vsplit --location=after --cwd=current
#
# map ctrl+a>k combine : launch --location=hsplit --cwd=current : move_window up
# map ctrl+a>j launch --location=hsplit --cwd=current

map ctrl+shift+n resize_window narrower
map ctrl+shift+w resize_window wider
map ctrl+shift+t resize_window taller
map ctrl+shift+s resize_window shorter

# Move current window to new tab
map ctrl+a>m detach_window ask

# Rename tab
map ctrl+a>r set_tab_title

map ctrl+a>h neighboring_window left
map ctrl+a>l neighboring_window right
map ctrl+a>j neighboring_window down
map ctrl+a>k neighboring_window up


# Enable remote control for vim integration
allow_remote_control yes
listen_on unix:/tmp/mykitty

# Navigation mappings that work with vim
map ctrl+h kitten pass_keys.py left ctrl+h
map ctrl+j kitten pass_keys.py bottom ctrl+j
map ctrl+k kitten pass_keys.py top ctrl+k
map ctrl+l kitten pass_keys.py right ctrl+l

# Make tabs behave like tmux windows
map ctrl+a>c new_tab_with_cwd
map ctrl+a>n next_tab
map ctrl+a>p previous_tab

map ctrl+a>1 goto_tab 1
map ctrl+a>2 goto_tab 2
map ctrl+a>3 goto_tab 3
map ctrl+a>4 goto_tab 4
map ctrl+a>5 goto_tab 5
map ctrl+a>6 goto_tab 6
map ctrl+a>7 goto_tab 7

map cmd+f combine : show_scrollback : send_text all ?

# Pipe scrollback to nvim
map ctrl+a>e launch --stdin-source=@screen_scrollback --type=overlay nvim -c "set ft=man nonumber nolist showtabline=0 foldcolumn=0" -

# # Window focus watcher for changing background color
# watcher /Users/ed/code/dotfiles/terminal/window_focus_watcher.py
