// Place your key bindings in this file to override the defaultsauto[]
[
    {
      "key": "ctrl+shift+-",
      "command": "-workbench.action.navigateForward"
    },
    {
      "command": "vscode-neovim.compositeEscape1",
      "key": "j",
      "when": "neovim.mode == insert && editorTextFocus",
      "args": "j"
    },
    {
      "command": "vscode-neovim.compositeEscape2",
      "key": "k",
      "when": "neovim.mode == insert && editorTextFocus",
      "args": "k"
    },
    {
      "key": "tab",
      "command": "selectNextQuickFix",
      "when": "editorFocus && quickFixWidgetVisible"
    },
    {
      "key": "shift+tab",
      "command": "selectPrevQuickFix",
      "when": "editorFocus && quickFixWidgetVisible"
    },
    {
      "key": "tab",
      "command": "selectNextSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "shift+tab",
      "command": "selectPrevSuggestion",
      "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
      "key": "alt+,",
      "command": "workbench.action.previousEditor"
    },
    {
      "key": "alt+.",
      "command": "workbench.action.nextEditor"
    },
    {
      "key": "Ctrl+Enter",
      "command": "editor.action.marker.next",
      "when": "neovim.mode == normal && editorFocus"
    },
    {
      "key": "alt+enter",
      "command": "jupyter.runcurrentcell",
      "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
      "key": "ctrl+enter",
      "command": "-jupyter.runcurrentcell",
      "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused"
    },
    {
      "key": "shift+f5",
      "command": "python.execInTerminal-icon"
    },
    {
      "key": "alt+f5",
      "command": "python.execInTerminal"
    },
    {
      "key": "ctrl+h",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+k",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "terminalFocus"
    },
    {
      "key": "ctrl+l",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "filesExplorerFocus"
    },
    {
      "key": "ctrl+h",
      "command": "workbench.action.compareEditor.focusSecondarySide",
      "when": "isInDiffEditor"
    },
    {
      "key": "ctrl+l",
      "command": "workbench.action.compareEditor.focusPrimarySide",
      "when": "isInDiffEditor"
    },
    {
      "key": "Enter",
      "command": "explorer.openAndPassFocus",
      "when": "filesExplorerFocus"
    },
    {
      "key": "ctrl+shift+q",
      "command": "workbench.action.quickOpenView"
    },
    {
      "key": "ctrl+q",
      "command": "-workbench.action.quickOpenView"
    },
    {
      "key": "ctrl+q",
      "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
      "when": "inQuickOpen && inViewsPicker"
    },
    {
      "key": "ctrl+q",
      "command": "cursorHome",
      "when": "editorTextFocus && neovim.ctrlKeysInsert &&!neovim.recording &&neovim.mode == insert"
    },
    {
      "key": "ctrl+`",
      "command": "-workbench.action.terminal.toggleTerminal",
      "when": "terminal.active"
    },
    {
      "key": "ctrl+shift+`",
      "command": "workbench.action.terminal.toggleTerminal"
    },
    {
      "key": "ctrl+`",
      "command": "workbench.action.terminal.openNativeConsole"
    },
    {
      "key": "shift+cmd+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
    },
    {
      "key": "space t",
      "command": "workbench.action.quickOpen",
      "when": "!inputFocus && !editorTextFocus && neovim.mode != insert"
    },
    {
      "key": "cmd+p",
      "command": "-workbench.action.quickOpen"
    },
    {
      "key": "ctrl+space",
      "command": "editor.action.inlineSuggest.commit",
      "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    {
      "key": "tab",
      "command": "-editor.action.inlineSuggest.commit",
      "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
    },
    {
      "key": "ctrl+space",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
      "key": "ctrl+l",
      "command": "editor.action.triggerSuggest",
      "when": "textInputFocus && !editorReadonly &&neovim.mode == insert"
    },
    {
      "key": "shift+cmd+g",
      "command": "workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm",
      "when": "workbench.scm.active"
    },
    {
      "key": "shift+cmd+g",
      "command": "workbench.view.scm",
      "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
      "key": "ctrl+shift+g",
      "command": "-workbench.view.scm",
      "when": "workbench.scm.active && !gitlens:disabled && config.gitlens.keymap == 'chorded'"
    },
    {
      "key": "ctrl+d",
      "command": "cursorPageDown",
      "when": "editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"
    },
    {
      "key": "ctrl+u",
      "command": "cursorPageUp",
      "when": "editorTextFocus && neovim.init && neovim.mode != insert && neovim.ctrlKeysNormal"
    },
    {
      "key": "shift+cmd+o",
      "command": "workbench.action.openRecent"
    },
    {
      "key": "ctrl+r",
      "command": "-workbench.action.openRecent"
    },
    {
      "key": "enter",
      "command": "list.toggleExpand",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus && listFocus && !inputFocus && explorerResourceIsFolder"
    },
    {
      "key": "r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "enter",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "e",
      "command": "notebook.cell.edit",
      "when": "notebookCellListFocused && notebookEditable && !inputFocus"
    },
    {
      "key": "ctrl+w -",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "ctrl+w s",
      "command": "workbench.action.splitEditorDown"
    },
    {
      "key": "ctrl+w v",
      "command": "workbench.action.splitEditorRight"
    },
    {
      "key": "ctrl+shift+`",
      "command": "-workbench.action.terminal.new",
      "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    {
      "key": "v",
      "command": "explorer.openToSide",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
      "key": "ctrl+enter",
      "command": "-explorer.openToSide",
      "when": "explorerViewletFocus && explorerViewletVisible && !inputFocus"
    },
    {
      "key": "cmd+i",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "alt+j",
      "command": "editor.action.insertCursorBelow",
      "when": "textInputFocus && !editorReadonly"
    },
    {
      "key": "alt+k",
      "command": "editor.action.insertCursorAbove",
      "when": "textInputFocus && !editorReadonly"
    },
    {
      "key": "ctrl+space",
      "command": "editor.action.inlineSuggest.commit",
      "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
      "key": "tab",
      "command": "-editor.action.inlineSuggest.commit",
      "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
      "key": "ctrl+space",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
      "key": "ctrl+h",
      "command": "-deleteLeft",
      "when": "textInputFocus"
    },
    {
      "key": "shift+cmd+space",
      "command": "-editor.action.triggerParameterHints",
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
      "key": "ctrl+i",
      "command": "toggleSuggestionDetails",
      "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "ctrl+space",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
      "key": "alt+d",
      "command": "editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "cmd+d",
      "command": "-editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
    },
    {
      "key": "d",
      "command": "moveFileToTrash",
      "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "delete",
      "command": "-moveFileToTrash",
      "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
      "key": "/",
      "command": "list.find",
      "when": "listFocus && listSupportsFind"
    },
    {
      "key": "space o s",
      "command": "workbench.action.showAllSymbols",
      "when": "!textInputFocus && !editorFocus && !listFocus && !inputFocus"
    },
    {
      "key": "cmd+g cmd+g",
      "command": "toggleVim"
    }
  ]