#! /usr/bin/env zsh
SRC_DIR=$(realpath $(dirname $(realpath ${(%):-%x})))
DOT_DIR=$SRC_DIR/..

# eval "$(/opt/homebrew/bin/brew shellenv)"
eval "$(fzf --zsh)"

## all of our zsh files that we want to source
typeset -U config_files
config_files=($DOT_DIR/**/*.zsh)

# load any env files first so that they can be used in other files
# also defines stuff like $ZSH
for file in ${(M)config_files:#*env.zsh}; do . $file; done

# Oh My Zsh plugins
plugins=(zsh-autosuggestions zsh-syntax-highlighting)
ZSH_THEME="powerlevel10k/powerlevel10k"
function add_to_fpath() {
  p=$1
  if [[ "$fpath" != *"$p"* ]]; then
    fpath=($1 $fpath)
  fi
}
add_to_fpath $OH_MY_ZSH/completions/plugins/zsh-completions/src
add_to_fpath $ZSH_DOT_DIR/completions

. $OH_MY_ZSH/oh-my-zsh.sh

# set completion colors to be the same as `ls`, after theme has been loaded
[[ -z "$LS_COLORS" ]] || zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
export LSCOLORS=$MYLSCOLORS  # do after oh-my-zsh to override their setting

# Activate vim mode.
bindkey -v
# You need these here otherwise if you go into normal mode and then back to insert
# mode the delete key doesn't work, on testing it seems I only need ^? in mac terminal but I kept both
# of suggested here: https://vi.stackexchange.com/questions/31671/set-o-vi-in-zsh-backspace-doesnt-delete-non-inserted-characters
bindkey "^H" backward-delete-char
bindkey "^?" backward-delete-char

# Add keybindings for ctrl-b and ctrl-e to go to beginning/end of line in insert mode
bindkey -M viins '^U' beginning-of-line
bindkey -M viins '^E' end-of-line

# load everything but env files
for file in ${${config_files:#*env.zsh}}; do . $file; done

# Stash your environment variables in ~/.localrc or zshrc.secret. This means they'll stay out
# of your main dotfiles repository (which may be public, like this one), but
# you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]; then
  . ~/.localrc
fi
if [[ -a $SRC_DIR/zshrc.secret ]]; then
    . $SRC_DIR/zshrc.secret
fi
